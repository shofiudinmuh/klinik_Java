/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package klinik;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.text.*;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author USER
 */
public class Dokter extends javax.swing.JFrame {
     private Connection conn;
    private DefaultTableModel tabmode;

    /**
     * Creates new form Dokter
     */
    public Dokter() throws SQLException {
        this.conn = koneksi.getkoneksi();
        initComponents();
        kosong();
        aktif();
      
        autonumber();
        datatable();
        Date now;
        now = new Date();

        SimpleDateFormat tgl1,tgl2;
        tgl1 = new SimpleDateFormat("EEEE, dd MMM yyyy");
        tgl2 = new SimpleDateFormat("HH:mm:ss");

        tanggal.setText(tgl1.format(now));
        Waktu.setText(tgl2.format(now));
    
    }
    protected void aktif(){
        txtid.requestFocus();
    }
    
    protected void kosong(){
        
        txtwaktu.setText("");
        poli.setSelectedItem(null);
        txtalamat.setText("");
        txtnmdok.setText("");
        txthp.setText("");
        
        txtcari.setText("");
        
    }

    
    
    protected void autonumber(){
        try{
            String sql = "SELECT ID_Dokter FROM Dokter order by ID_Dokter asc";
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            txtid.setText("D0001");
            while(rs.next()){
                String id = rs.getString("ID_Dokter").substring(2);
                int AN = Integer.parseInt(id)+1;
                String Nol = "";
                
                if (AN < 10){
                    Nol = "000";
                }
                else if (AN < 100){
                    Nol = "00";
                }
                else if (AN < 1000){
                    Nol = "0";
                }
                else if (AN < 10000){
                    Nol = "";
                }
                txtid.setText("D"+Nol+AN);
            }
        }
            catch(SQLException e){
                    JOptionPane.showMessageDialog(null, "Auto number gagal"+e);
            }
    }
    
    protected void datatable(){
        Object[] Baris = {"ID Dokter","Nama Dokter","Jenis Kelamin","Alamat","No. HP","Poli","Hari"};
        tabmode = new DefaultTableModel(null, Baris);
        String cariitem = txtcari.getText();

        try {
            String sql = "SELECT * FROM dokter where ID_Dokter like '%"+cariitem+"%' or Nama_Dokter like '%"+cariitem+"%' or Poli like '%"+cariitem+"%' order by ID_Dokter asc";
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()){
                tabmode.addRow(new Object[]{
                hasil.getString(1),
                hasil.getString(2),
                hasil.getString(3),
                hasil.getString(4),
                hasil.getString(5),
                hasil.getString(6),
                hasil.getString(7),
                
            });
        }
        tabeldokter.setModel(tabmode);
     } catch (SQLException e){
            JOptionPane.showMessageDialog(null,"data gagal dipanggil"+e);
     }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabeldokter = new javax.swing.JTable();
        user = new javax.swing.JButton();
        pasien = new javax.swing.JButton();
        Dokter = new javax.swing.JButton();
        Diagnosa = new javax.swing.JButton();
        Obat = new javax.swing.JButton();
        Kasir = new javax.swing.JButton();
        Keluar = new javax.swing.JButton();
        tambah = new javax.swing.JButton();
        ubah = new javax.swing.JButton();
        Hapus = new javax.swing.JButton();
        cetak = new javax.swing.JButton();
        batal = new javax.swing.JButton();
        cari = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        txtcari = new javax.swing.JTextField();
        tanggal = new javax.swing.JLabel();
        Waktu = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtnmdok = new javax.swing.JTextField();
        poli = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtalamat = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        laki = new javax.swing.JRadioButton();
        perempuan = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        txthp = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtwaktu = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        kamar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpanel1.setPreferredSize(new java.awt.Dimension(900, 550));
        jpanel1.setLayout(null);

        tabeldokter.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabeldokter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabeldokterMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabeldokter);

        jpanel1.add(jScrollPane1);
        jScrollPane1.setBounds(350, 80, 770, 150);

        user.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        user.setText("User");
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        jpanel1.add(user);
        user.setBounds(50, 230, 210, 40);

        pasien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pasien.setText("Pasien");
        pasien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasienActionPerformed(evt);
            }
        });
        jpanel1.add(pasien);
        pasien.setBounds(50, 310, 210, 40);

        Dokter.setBackground(new java.awt.Color(51, 51, 255));
        Dokter.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Dokter.setText("Dokter");
        Dokter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DokterActionPerformed(evt);
            }
        });
        jpanel1.add(Dokter);
        Dokter.setBounds(50, 270, 210, 40);

        Diagnosa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Diagnosa.setText("Diagnosa");
        Diagnosa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagnosaActionPerformed(evt);
            }
        });
        jpanel1.add(Diagnosa);
        Diagnosa.setBounds(50, 350, 210, 40);

        Obat.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Obat.setText("Obat");
        Obat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ObatActionPerformed(evt);
            }
        });
        jpanel1.add(Obat);
        Obat.setBounds(50, 390, 210, 40);

        Kasir.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Kasir.setText("Kasir");
        Kasir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KasirActionPerformed(evt);
            }
        });
        jpanel1.add(Kasir);
        Kasir.setBounds(50, 470, 210, 40);

        Keluar.setBackground(new java.awt.Color(255, 0, 0));
        Keluar.setText("Keluar");
        Keluar.setBorderPainted(false);
        Keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeluarActionPerformed(evt);
            }
        });
        jpanel1.add(Keluar);
        Keluar.setBounds(100, 527, 100, 40);

        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });
        jpanel1.add(tambah);
        tambah.setBounds(370, 260, 91, 29);

        ubah.setText("Edit");
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });
        jpanel1.add(ubah);
        ubah.setBounds(480, 260, 59, 29);

        Hapus.setText("Hapus");
        Hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusActionPerformed(evt);
            }
        });
        jpanel1.add(Hapus);
        Hapus.setBounds(560, 260, 77, 29);

        cetak.setText("Cetak");
        cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakActionPerformed(evt);
            }
        });
        jpanel1.add(cetak);
        cetak.setBounds(660, 260, 71, 29);

        batal.setText("Batal");
        batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalActionPerformed(evt);
            }
        });
        jpanel1.add(batal);
        batal.setBounds(750, 260, 67, 29);

        cari.setText("Cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });
        jpanel1.add(cari);
        cari.setBounds(870, 300, 61, 29);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Kategori", "ID Dokter", "Nama Dokter", "Poli" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jpanel1.add(jComboBox1);
        jComboBox1.setBounds(960, 260, 180, 26);

        txtcari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcariActionPerformed(evt);
            }
        });
        jpanel1.add(txtcari);
        txtcari.setBounds(960, 300, 180, 26);

        tanggal.setText("jLabel11");
        jpanel1.add(tanggal);
        tanggal.setBounds(200, 60, 120, 20);

        Waktu.setText("jLabel12");
        jpanel1.add(Waktu);
        Waktu.setBounds(200, 90, 120, 20);

        jTextField1.setText("Kategori");
        jpanel1.add(jTextField1);
        jTextField1.setBounds(870, 260, 64, 26);

        jLabel3.setText("ID Dokter");
        jpanel1.add(jLabel3);
        jLabel3.setBounds(370, 420, 69, 20);

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        jpanel1.add(txtid);
        txtid.setBounds(510, 410, 190, 26);

        jLabel6.setText("Alamat");
        jpanel1.add(jLabel6);
        jLabel6.setBounds(760, 360, 50, 20);

        jLabel4.setText("Nama Dokter");
        jpanel1.add(jLabel4);
        jLabel4.setBounds(370, 380, 93, 20);
        jpanel1.add(txtnmdok);
        txtnmdok.setBounds(510, 370, 186, 26);

        poli.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Poli...", "Umum", "Gizi", "Ibu dan Anak" }));
        jpanel1.add(poli);
        poli.setBounds(900, 530, 210, 26);

        txtalamat.setColumns(20);
        txtalamat.setRows(5);
        jScrollPane2.setViewportView(txtalamat);

        jpanel1.add(jScrollPane2);
        jScrollPane2.setBounds(900, 360, 226, 96);

        jLabel5.setText("Jenis Kelamin");
        jpanel1.add(jLabel5);
        jLabel5.setBounds(370, 490, 96, 20);

        laki.setText("Laki-Laki");
        jpanel1.add(laki);
        laki.setBounds(510, 480, 95, 29);

        perempuan.setText("Perempuan");
        jpanel1.add(perempuan);
        perempuan.setBounds(510, 520, 113, 29);

        jLabel7.setText("No.Hp");
        jpanel1.add(jLabel7);
        jLabel7.setBounds(760, 470, 45, 20);

        txthp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txthpKeyTyped(evt);
            }
        });
        jpanel1.add(txthp);
        txthp.setBounds(900, 470, 220, 26);

        jLabel8.setText("Waktu Praktek");
        jpanel1.add(jLabel8);
        jLabel8.setBounds(760, 510, 101, 20);
        jpanel1.add(txtwaktu);
        txtwaktu.setBounds(900, 500, 220, 26);

        jLabel9.setText("Poli");
        jpanel1.add(jLabel9);
        jLabel9.setBounds(760, 540, 26, 20);

        kamar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        kamar.setText("Kamar");
        kamar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kamarActionPerformed(evt);
            }
        });
        jpanel1.add(kamar);
        kamar.setBounds(50, 430, 210, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/FiksHome.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jpanel1.add(jLabel1);
        jLabel1.setBounds(0, -80, 1210, 780);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1202, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtcariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcariActionPerformed
        if (evt.hashCode()== KeyEvent.VK_ENTER){
            datatable();
        }
    }//GEN-LAST:event_txtcariActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        txtid.getText();
        txtnmdok.getText();
        poli.setSelectedItem(null);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        datatable();
    }//GEN-LAST:event_cariActionPerformed

    private void batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalActionPerformed
        kosong();
        aktif();
       
        autonumber();
        datatable();
    }//GEN-LAST:event_batalActionPerformed

    private void cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakActionPerformed
        // TODO add your handling code here:
        try{
            HashMap parameter = new HashMap();
            parameter.put("id_dokter",txtid.getText());
            File file = new File ("src/Report/Dokter.jasper");
            JasperReport jr = (JasperReport) JRLoader.loadObject(file);
            JasperPrint jp = JasperFillManager.fillReport(jr, parameter, conn);
            JasperViewer.viewReport(jp, false);
            JasperViewer.setDefaultLookAndFeelDecorated(true);
        } catch (Exception e){
            javax.swing.JOptionPane.showMessageDialog(null,
                    "Data Tidak Dapat di Cetak !!!" + "\n" + e.getMessage(), 
                    "Cetak Data", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cetakActionPerformed

    private void HapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusActionPerformed
        int ok = JOptionPane.showConfirmDialog(null,"hapus","konfirmasi dialog", JOptionPane.YES_NO_OPTION);
        String sql = "delete from dokter where id_dokter = '"+txtid.getText()+"'";
        try {
            PreparedStatement stat = conn.prepareStatement(sql);
            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "data berhasil dihapus");
            kosong();
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, "data gagal dihapus" +e);
        }
        datatable();
    }//GEN-LAST:event_HapusActionPerformed

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        String jenis = null;
        if (laki.isSelected()){
            jenis = "Laki-Laki";
        } else if (perempuan.isSelected()){
            jenis = "Perempuan";
        }
        String sql = "update dokter set id_dokter=?, nama_dokter=?, jenis_kelamin=?, alamat=?, telepon=?, poli=?, hari=? where id_dokter='"+txtid.getText()+"'";

        try {
            PreparedStatement stat = conn.prepareStatement(sql);
           
            stat.setString(1,txtid.getText());
            stat.setString(2,txtnmdok.getText());
            stat.setString(3,jenis);
            stat.setString(4,txtalamat.getText());
            stat.setString(5,txthp.getText());
            stat.setString(6,poli.getSelectedItem().toString());
            stat.setString(7,txtwaktu.getText());

            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "data berhasil diubah");
            kosong();
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, "data gagal diubah" +e);
        }
        datatable();
    }//GEN-LAST:event_ubahActionPerformed

    private void KeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeluarActionPerformed
        int dialogBtn =JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Anda Yakin Akan Keluar?", "Peringatan", dialogBtn);
        if (dialogResult == 0){
            Login frmU = null;
        frmU = new Login();
        frmU.setVisible(true);
        this.dispose();
        }else{
        }
    }//GEN-LAST:event_KeluarActionPerformed

    private void KasirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KasirActionPerformed
        Kasir frmK = null;
         try {
             frmK = new Kasir();
         } catch (SQLException ex) {
             Logger.getLogger(Dokter.class.getName()).log(Level.SEVERE, null, ex);
         }
        frmK.setVisible(true);
    }//GEN-LAST:event_KasirActionPerformed

    private void ObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ObatActionPerformed
        Obat frmO = null;
         try {
             frmO = new Obat();
         } catch (SQLException ex) {
             Logger.getLogger(Dokter.class.getName()).log(Level.SEVERE, null, ex);
         }
        frmO.setVisible(true);
    }//GEN-LAST:event_ObatActionPerformed

    private void DiagnosaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiagnosaActionPerformed
        Diagnosa frmDi = null;
         try {
             frmDi = new Diagnosa();
         } catch (SQLException ex) {
             Logger.getLogger(Dokter.class.getName()).log(Level.SEVERE, null, ex);
         }
        frmDi.setVisible(true);
    }//GEN-LAST:event_DiagnosaActionPerformed

    private void DokterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DokterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DokterActionPerformed

    private void pasienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasienActionPerformed
        Pasien frmP = null;
        try {
            frmP = new Pasien();
        } catch (SQLException ex) {
            Logger.getLogger(Dokter.class.getName()).log(Level.SEVERE, null, ex);
        }
        frmP.setVisible(true);
    }//GEN-LAST:event_pasienActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        User frmU = null;
        try {
            frmU = new User();
        } catch (SQLException ex) {
            Logger.getLogger(Dokter.class.getName()).log(Level.SEVERE, null, ex);
        }
        frmU.setVisible(true);
    }//GEN-LAST:event_userActionPerformed

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void tabeldokterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabeldokterMouseClicked
        int bar = tabeldokter.getSelectedRow();
        String a = tabmode.getValueAt(bar, 0).toString();
        String b = tabmode.getValueAt(bar, 1).toString();
        String c = tabmode.getValueAt(bar, 2).toString();
        String d = tabmode.getValueAt(bar, 3).toString();
        String e = tabmode.getValueAt(bar, 4).toString();
        String f = tabmode.getValueAt(bar, 5).toString();
        String g = tabmode.getValueAt(bar, 6).toString();
        

        
        txtid.setText(a);
        txtnmdok.setText(b);
        if("Laki-Laki".equals(b)){
            laki.setSelected(true);
        }else{
            perempuan.setSelected(true);
        }
        txtalamat.setText(d);
        txthp.setText(e);
        poli.setSelectedItem(f);
        txtwaktu.setText(g);
    }//GEN-LAST:event_tabeldokterMouseClicked

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        String jenis = null;
       if (laki.isSelected()){
            jenis = "Laki-Laki";
       } else if (perempuan.isSelected()){
            jenis = "Perempuan";
       }
       
       String sql = "insert dokter values (?,?,?,?,?,?,?)";
       
       try {
            PreparedStatement stat = conn.prepareStatement(sql);
            
            stat.setString(1,txtid.getText());
            stat.setString(2,txtnmdok.getText());
            stat.setString(3,jenis);
            stat.setString(4,txtalamat.getText());
            stat.setString(5,txthp.getText());
            stat.setString(6,poli.getSelectedItem().toString());
            stat.setString(7,txtwaktu.getText());
            
            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "data berhasil disimpan");
            kosong();
       }
       catch (SQLException e){
            JOptionPane.showMessageDialog(null, "data gagal disimpan" +e);
       }
       datatable();
    }//GEN-LAST:event_tambahActionPerformed

    private void kamarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kamarActionPerformed
        Kamar frmK = null;
        try {
            frmK = new Kamar();
        } catch (SQLException ex) {
            Logger.getLogger(Kamar.class.getName()).log(Level.SEVERE, null, ex);
        }
        frmK.setVisible(true);
    }//GEN-LAST:event_kamarActionPerformed

    private void txthpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txthpKeyTyped
 char[] x = new char[] {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',',','.'};
        boolean boleh = false;
        for (int i=0; i < x.length; i++) {
        if (x[i] == evt.getKeyChar()) {
        boleh = true;
            break;
            }
            }
        if (!boleh) {
        evt.setKeyChar((char) 0);
        }   
    }//GEN-LAST:event_txthpKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Dokter().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Dokter.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Diagnosa;
    private javax.swing.JButton Dokter;
    private javax.swing.JButton Hapus;
    private javax.swing.JButton Kasir;
    private javax.swing.JButton Keluar;
    private javax.swing.JButton Obat;
    private javax.swing.JLabel Waktu;
    private javax.swing.JButton batal;
    private javax.swing.JButton cari;
    private javax.swing.JButton cetak;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel jpanel1;
    private javax.swing.JButton kamar;
    private javax.swing.JRadioButton laki;
    private javax.swing.JButton pasien;
    private javax.swing.JRadioButton perempuan;
    private javax.swing.JComboBox<String> poli;
    private javax.swing.JTable tabeldokter;
    private javax.swing.JButton tambah;
    private javax.swing.JLabel tanggal;
    private javax.swing.JTextArea txtalamat;
    private javax.swing.JTextField txtcari;
    private javax.swing.JTextField txthp;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtnmdok;
    private javax.swing.JTextField txtwaktu;
    private javax.swing.JButton ubah;
    private javax.swing.JButton user;
    // End of variables declaration//GEN-END:variables
}
